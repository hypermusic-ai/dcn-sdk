name: CI

on:
  pull_request:
    paths:
      - "python/**"
      - "js/**"
      - "cpp/**"
      - ".github/workflows/ci.yml"

concurrency:
  group: ci-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  python:
    name: Python • gen client & tests (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install build/test tooling
        run: |
          python -m pip install -U pip
          pip install pytest || true

      - name: Install package (editable)
        run: |
          pip install -e ./python

#       - name: Run unit tests
#         run: |
#           if [ -d python/tests ]; then
#             # prefer pytest if present; fallback to unittest
#             python - <<'PY'
# import importlib.util, subprocess, sys
# has_pytest = importlib.util.find_spec("pytest") is not None
# cmd = [sys.executable, "-m", "pytest", "-q", "python/tests"] if has_pytest \
#       else [sys.executable, "-m", "unittest", "discover", "-s", "python/tests", "-p", "test_*.py", "-v"]
# sys.exit(subprocess.call(cmd))
# PY
#           else
#             echo "No python/tests directory; skipping."
#           fi

  # js:
  #   name: JS • install & test
  #   runs-on: ubuntu-latest
  #   if: ${{ hashFiles('js/package.json') != '' }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: "20"
  #         cache: "npm"
  #         cache-dependency-path: js/package-lock.json
  #     - name: Install
  #       working-directory: js
  #       run: npm ci
  #     - name: Lint (if present)
  #       working-directory: js
  #       run: npm run lint --if-present
  #     - name: Test (if present)
  #       working-directory: js
  #       run: npm test --if-present
  #     - name: Build (if present)
  #       working-directory: js
  #       run: npm run build --if-present

  # cpp:
  #   name: C++ • cmake build & tests
  #   runs-on: ubuntu-latest
  #   if: ${{ hashFiles('cpp/CMakeLists.txt') != '' }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install build deps
  #       run: sudo apt-get update && sudo apt-get install -y cmake ninja-build ccache
  #     - name: Configure
  #       run: |
  #         cmake -S cpp -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
  #     - name: Build
  #       run: cmake --build build --config Release -- -k 0
  #     - name: Test (if ctests exist)
  #       run: |
  #         if [ -f build/CTestTestfile.cmake ]; then
  #           ctest --test-dir build --output-on-failure
  #         else
  #           echo "No CTest config; skipping."
  #         fi
